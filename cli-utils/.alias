
# ***** ***** git ***** *****
alias ga="git add"
alias gb="git branch"
alias gc="git commit -m"
alias gco="git checkout"
alias gd="git diff"
alias gl="git log"
alias gs="git status"
alias npmnuke="rm -rf node_modules/ && npm i"
# The -G option is equivalent to defining CLICOLOR in the environment.
# the -h makes it human readable, and -F shows / after dir and @ after executable.
alias ls="ls -GFh"

# ***** ***** homebrew ***** *****
alias brewl="brew list"
alias brews="brew search"
alias brewcask="brew cask list"
alias brewsvc="brew services list"

# ***** ***** go ***** *****
# gopher
alias gtidy="go mod tidy"

# Go run all files in pwd
alias grun="go run ./..."
# Go build executable (you'll then run binary directly...)
alias gobuild="go build ."

# Docs
alias godocs='godoc --http :6060'

# Test
alias gtest="go test ./..."
alias gtestint="go test --tags=integration"
alias gtestclean="go clean -testcache"

# ***** ***** Kubernetes ***** *****
alias k="kubectl"
alias po="pods"
alias svc="services"
alias deploy="deployment"

alias k-view="kubectl config view"

## k8s context: see also kubectx binary and kubens binary.
alias k-context="kubectl config current-context"
alias k-context-dev="kubectl config use-context $CLUSTER"

alias kpods-$NAMESPACE="kubectl get pods -o wide -L chart -L tag -n $NAMESPACE"
alias kpods-deleteit="kubectl delete deploy -n $NAMESPACE --context $CLUSTER your-app"

# See headroom in a ns
alias k-headroom="kubectl --context $CLUSTER describe resourcequota -n $NAMESPACE"
# (tip: You can use Grafana deployment object, or similar metrics, to see what it's actually using.)
# Also see resource profiles for your system.

# ***** ***** gcloud cli ***** *****
alias gcloud-auth='gcloud auth login'
# gcloud config set project $PROJECT_ID
# gcloud container clusters get-credentials $CLUSTER --region $REGION --project $PROJECT

# ***** ***** Python ***** *****
# alias python="python3" # becuz python 3.7, see brew.bootstrap.sh
alias pip="pip3"

# ***** ***** GnuPG ***** *****
alias pgp-keygen="gpg --gen-key && (gpg --export $EMAIL | base64)"
alias gpg-list="gpg --list-keys"
alias gpg-export="gpg --armor --export $EMAIL > ~/$YOUR_USERNAME.asc"
# Import someone's public key using key server: 
alias gpg-import="gpg --keyserver hkps://keys.openpgp.org --recv-keys 0x......."
# Check fingerprint of a key:
alias gpg-fingerprint="gpg --fingerprint $THEIR_EMAIL"
# Verify a key using the web of trust:
alias gpg-verify="gpg --list-signatures $THEIR_EMAIL"
# paste, encrypt and sign message:
alias gpg-message=" gpg --encrypt --sign --armor --output ~/Desktop/encrypted.asc --recipient $EMAIL --recipient $THEIR_EMAIL"
# Decrypt message to stdout and decode quoted-printable characters:
alias pgp-decrypt="gpg --decrypt ~/Desktop/encrypted.asc | perl -MMIME::QuotedPrint -0777 -nle 'print decode_qp($_)'"
# Clear passphrase from GnuPG cache:
alias gpg-done="gpg-connect-agent reloadagent /bye"

# ***** ***** random stuff ***** *****

# MySQL
alias mysql-login="mysql --host=localhost --port=0000 --user=fakeuser --password=fake-auth"
alias mysql-login2="mysql -u fakeuser -h mysql.domain.com -p fake-auth"
# > show databases;
# > show tables;
# > desc user; // schemas, structure.
# > describe tableName; // schemas, structure.
# > select user, host, authentication_string from mysql.user; // later versions of mysql...
# > $ mysql --host=localhost DBNAME --port=0000 --user=fakeuser --password=fake-auth
# > mysql.server start # .stop startup ... auto launch w launchctl

# postgres
# start:
alias pgstart="pg_ctl -D /usr/local/var/postgres start"
# stop:
alias pgstop="pg_ctl -D /usr/local/var/postgres stop"
# get into db:
alias pg="psql -d postgres"
# psql
# HELP: \?
# LIST DATABASES: \l
# CONNECT TO DB: \c db_name
# LIST RELATIONS: \d
# DESCRIBE A TABLE: \d table_name
# LIST AVAILABLE SCHEMA: \dn
# LIST AVAILABLE FUNCTIONS: \df
# LIST AVAILABLE VIEWS: \dv
# COMMAND HISTORY: \s
